<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY plgver "3.0.7">
]>

<PLUGIN>

<!--
2012-06-20 - Initial Release
OpenVPN Client version 3 x64
-->

<FILE Name="/boot/packages/lzo-2.03-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/l/lzo-2.03-x86_64-1.txz</URL>
<MD5>d55f381c25cda96b274f36cf41be1575</MD5>
</FILE>

<FILE Name="/boot/packages/iproute2-3.10.0-x86_64-2.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/n/iproute2-3.10.0-x86_64-2.txz</URL>
<MD5>22156ad2743433beb6bc7a7e3dff8124</MD5>
</FILE>

<FILE Name="/boot/packages/openvpn-2.3.2-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>ftp://ftp.sunet.se/pub/os/Linux/distributions/slackware//slackware64-14.1/slackware64/n/openvpn-2.3.2-x86_64-1.txz</URL>
<MD5>efabea515e52b8aed23ee35c41fc52eb</MD5>
</FILE>

<FILE Name="/boot/config/plugins/openvpn/Device_status.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/9/97/Device_status.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/openvpn/New_config.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/b/b3/New_config.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/openvpn/Information.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/5/54/Information.png</URL>
</FILE>

<FILE Name="/boot/config/plugins/openvpn/Openvpn.png">
<URL>--no-check-certificate http://lime-technology.com/wiki/images/2/2f/Openvpn.png</URL>
</FILE>

############################################
# cleanup file
############################################
<FILE Name="/tmp/openvpn-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
rm -rf /tmp/openvpn
rm -f /etc/rc.d/rc.openvpn
rm -rf /usr/local/emhttp/plugins/openvpn
rm -rf /dev/net
mkdir /dev/net
mknod /dev/net/tun c 10 200

mkdir /tmp/openvpn
mkdir /var/run/openvpn

rm /tmp/openvpn-cleanup
]]>
</INLINE>
</FILE>


<FILE Name="/boot/config/plugins/openvpn/openvpn.cfg">
<INLINE>
<![CDATA[
# openvpn configuration
USER="Username for client"
PASS="Password for client"
START_ON_MOUNT="no"
PLG_EXT="no"
PLG_PASSWORD="yes"
OVPNCHOOSE=Chose a file
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/openvpn/password.txt" Mode="0770">
<INLINE>
<![CDATA[
]]>
</INLINE>
</FILE>


############################################
# rc.openvpn file
############################################
<FILE Name="/etc/rc.d/rc.openvpn" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash

openvpn_updatecfg()
{
# Arguments file used for WEBUI configuration update
 ARGUMENTS_FILE="/usr/local/emhttp/plugins/openvpn/openvpn.args"

 [ -f $ARGUMENTS_FILE ] && source $ARGUMENTS_FILE

USER=$USER_NEW
PASS=$PASS_NEW
START_ON_MOUNT=$START_ON_MOUNT_NEW
PLG_EXT=$PLG_EXT_NEW
PLG_PASSWORD=$PLG_PASSWORD_NEW
OVPNCHOOSE=$OVPNCHOOSE_NEW

  write_cfg
  
}

#################
# W R I T E C F G
#################
write_cfg()
{ 
  echo "# openvpn client plugin configuration file" > /boot/config/plugins/openvpn/openvpn.cfg
  echo "USER=\"$USER\"" >> /boot/config/plugins/openvpn/openvpn.cfg
  echo "PASS=\"$PASS\"" >> /boot/config/plugins/openvpn/openvpn.cfg
  echo "START_ON_MOUNT=\"$START_ON_MOUNT\"" >> /boot/config/plugins/openvpn/openvpn.cfg
  echo "PLG_EXT=\"$PLG_EXT\"" >> /boot/config/plugins/openvpn/openvpn.cfg
  echo "PLG_PASSWORD=\"$PLG_PASSWORD\"" >> /boot/config/plugins/openvpn/openvpn.cfg
  echo "OVPNCHOOSE=\"$OVPNCHOOSE\"" >> /boot/config/plugins/openvpn/openvpn.cfg
  
  echo $USER > /boot/config/plugins/openvpn/password.txt
  echo $PASS >> /boot/config/plugins/openvpn/password.txt

  logger -trc.openvpnclient -plocal7.info -is "Plugin configuration written"
}

openvpn_plgver()
{
  case "$1" in
    'local')
      if [ -f /boot/config/plugins/openvpn_client_x64.plg ]; then
        VERSION=$(grep "<\!ENTITY plgver" /boot/config/plugins/openvpn_client_x64.plg | cut -d\" -f2)
      else
        VERSION=Unknown
      fi        
    ;;
    'remote')
      VERSION=$(wget --no-check-certificate -q https://raw.github.com/petersm1/openvpn_client_x64/master/openvpn_client_x64.plg -O - | grep "<\!ENTITY plgver" | cut -d\" -f2)
    ;;
  esac
  echo -n "$VERSION"
}

openvpn_getver() {

  if [[ ! -z $1 ]]; then
    openvpn_plgver $1
  else
    echo "usage $0 getver local|remote"
  fi
}

openvpn_start() {
source /boot/config/plugins/openvpn/openvpn.cfg

alive=$(check_alive)

if [ $alive = "no" ]; then

  sleep 0.5
  update_ovpn_interface
	  
		if [[ $PLG_PASSWORD = "yes" ]]; then
	  	echo "Updating the ovpn file..."
	  	openvpn_update_ovpn
	  else
	  	echo "No change was done to the ovpn file"	
	  fi
  
  sleep 0.5
 
echo "Changing to the folder where the openvpn config files belong"
openvpnpath=${OVPNCHOOSE%/*}

cd $openvpnpath

echo $openvpnpath
  
   CMDLINE="openvpn --writepid /var/run/openvpn/openvpn.pid --script-security 3 --mute-replay-warnings --config $OVPNCHOOSE > /dev/null 2>&1"  
##   CMDLINE="openvpn --writepid /var/run/openvpn/openvpn.pid --script-security 3 --mute-replay-warnings --config $OVPNCHOOSE > /tmp/openvpn/openvpn.out /dev/null"  



  # nohup $CMDLINE > /dev/null 2>&1 &
 nohup $CMDLINE > /tmp/openvpn/openvpn.out 2>&1 &
   echo $CMDLINE	

  echo "Starting Openvpn Tunnel: Please Wait..."
  rm -f /tmp/openvpn/openvpn.out.error 
  sleep 12

           
 #######Check if this call is necasary############## extended_device

   # test if we have a connection
  dev_tun=$(extended_device)

	CONNECTED="`ifconfig -a | grep -A 6 $dev_tun`"

		if [ "$CONNECTED" != "" ]; then
		   echo "Connected successfully on"  $dev_tun  
		   sleep 0.5
		   echo "Logging in to VPN was successful"		         
			
		if [ $PLG_EXT == "Bypass" ]; then
			echo "Starting bypass IP addresses..."
			bypasse_IP
	        fi
		 
		if [ $PLG_EXT == "Specific" ]; then
			echo "Starting extended routing..."
			extended_route
		fi
		else
			echo "Not connected! " $dev_tun " not established!!!"
		   	sleep 0.5
		   	rm -f /var/run/openvpn/openvpn.pid
		 	cp /tmp/openvpn/openvpn.out /tmp/openvpn/openvpn.out.error 
		 fi
		
	sleep 2
	#openvpn_status
	echo "OK... Started" 
  else
   echo "Server already started"
fi

### this is do remove defunct process, don't know why it's left, this is a dirty solution, need to find the real cause!!!! #
	sleep 1
	ps -ef | grep rc.openvpn | awk '{print $3}' | xargs kill
	sleep 1
##******************************END ***************************************************
}

openvpn_stop() {
alive=$(check_alive)

if [ $alive = "yes" ]; then

 echo "Stoping Openvpn Tunnel....."
 sleep 0.5
     
	#	kill -9 $(cat /var/run/openvpn/openvpn.pid )
		#kill $(cat /var/run/openvpn/openvpn.pid)
		kill `ps -ef | grep openvpn.pid | grep -v grep | awk '{print $2}'`
		#sudo pkill openvpn
		rm -f /var/run/openvpn/openvpn.pid
		rm -rf /tmp/openvpn/openvpn.out
		echo "Stopped... OK"
else
    	echo "Client already stoped"
fi
}

openvpn_restart() {
openvpn_stop;
sleep 2	
openvpn_start;	
}

openvpn_status() {

    if [ -e /var/run/openvpn/openvpn.pid ];then

	   for process in `ls /var/run/openvpn/openvpn.pid` ; do
	      echo ${runningpid:= `cat $process` }
	     done
     else
       echo ${runningpid:=} 
       #echo ${runningpid:=No openvpn process is running.} 
    fi
 }

openvpn_update_ovpn() {
  
   if grep -R /boot/config/plugins/openvpn/password.txt "$OVPNCHOOSE" ; then
      echo "The ovpn file already has the option --> /boot/config/plugins/openvpn/password.txt" 
    else
      sed -i '/auth-user-pass/d' "$OVPNCHOOSE"
      echo -e "\nauth-user-pass /boot/config/plugins/openvpn/password.txt" >> $OVPNCHOOSE
      sleep 0.5
      echo "The ovpn file was updated with -->  /boot/config/plugins/openvpn/password.txt" 
   fi

    if grep -R status "$OVPNCHOOSE" ; then
      echo "The ovpn file already has the option --> status /tmp/openvpn/openvpn-status.log" 
    else
      echo -e "\nstatus /tmp/openvpn/openvpn-status.log" >> $OVPNCHOOSE
      sleep 0.5
      echo "The ovpn file was updated with -->  status /tmp/openvpn/openvpn-status.log" 
   fi
}

openvpn_write_startfile() {
echo "Changing to the folder where the openvpn config files belong"
openvpnpath=${OVPNCHOOSE%/*}

echo $openvpnpath
echo "cd $openvpnpath" > /tmp/openvpn/openclient.sh

#     echo "sudo openvpn --writepid /var/run/openvpn/openvpn.pid --script-security 3 --mute-replay-warnings --config \"$OVPNCHOOSE\" 2>&1 &" >> /tmp/openvpn/openclient.sh
      echo "openvpn --writepid /var/run/openvpn/openvpn.pid --script-security 3 --mute-replay-warnings --config $OVPNCHOOSE > /dev/null 2>&1 &" >> /tmp/openvpn/openclient.sh
      chmod 777 /tmp/openvpn/openclient.sh
      sleep 0.5
}

	
update_ovpn_interface() {

  check_dev=`grep 'dev ' "$OVPNCHOOSE"`
    if [[ $check_dev != "dev tap5" ]] && [[ $check_dev != "dev tun5" ]]; then
       if grep -q "dev tap" "$OVPNCHOOSE" ; then
        	sed -i '/dev tap/d' "$OVPNCHOOSE"
        	sed -i '/proto/adev tap5' "$OVPNCHOOSE"
	        dev_tun=`grep 'dev tap' "$OVPNCHOOSE"`
	        #echo ${dev_tun:(-4)}  
        else
           	sed -i '/dev tun/d' "$OVPNCHOOSE"
           	sed -i '/proto/adev tun5' "$OVPNCHOOSE"
           	dev_tun=`grep 'dev tun' "$OVPNCHOOSE"`
	        #echo ${dev_tun:(-4)}  
	      fi
    fi
}


tunnel_IP() {
	
tmpinterface=$(check_alive)	
extended_device >/dev/null
	
	if [ $tmpinterface = "yes" ]; then
		#/sbin/ifconfig $dev_tun | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'
		curl -s --max-time 15 --silent checkip.dyndns.org | grep -Eo '[0-9\.]+'

	else
		#/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'
		curl -s --max-time 15 --silent checkip.dyndns.org | grep -Eo '[0-9\.]+'
	fi
}

extended_IP() {
     extended_device >/dev/null
     echo "`ifconfig $dev_tun | sed -rn 's/.*r:([^ ]+) .*/\1/p'`"	
}

extended_device() {
     check_dev=`grep 'dev ' "$OVPNCHOOSE"`
     echo ${check_dev:(-4)}
}

extended_route() {

if [ -e /boot/openvpn/webbadress.txt ];then
	J=0
	echo "Starting Routing..."
	echo "Starting Routing..."  >> /tmp/openvpn/openvpn.out
	for i in `cat /boot/openvpn/webbadress.txt`
	   do
		myip="`ping -c 1 $i | awk 'NR==1{gsub(/\(|\)/,"",$3);print $3}'`"
		mynewip="${myip%.*}.0/24"			
		echo $myip   "   >>>>>>>   "     $i >> /tmp/openvpn/openvpn.out
		echo $myip   "   >>>>>>>   "     $i 
		array=( "${array[@]}" "$mynewip" )
		echo ${array[J]}
		(( J++ ))
	  done

	tunnelip="`ifconfig $dev_tun | sed -rn 's/.*r:([^ ]+) .*/\1/p'`"
	echo "VPN Gateway: " $tunnelip >> /tmp/openvpn/openvpn.out
	echo "VPN Gateway: " $tunnelip
	ip route delete "0.0.0.0/1"
	ip route delete "128.0.0.0/1"

#echo "********* Routing IP adresses to VPN tunnels********************"
	for ((I=0; I < J ; I++))
	 	 do
	  	ip route add ${array[I]} via $tunnelip dev $dev_tun
	   	echo ip route add ${array[I]} via $tunnelip dev $dev_tun  >> /tmp/openvpn/openvpn.out
	   	echo ip route add ${array[I]} via $tunnelip dev $dev_tun 
	 	 done
    else
			echo "/boot/openvpn/webbadress.txt don't exist" >> /tmp/openvpn/openvpn.out
			echo "/boot/openvpn/webbadress.txt don't exist"
    fi	
}

get_all_IP() {
     /sbin/ifconfig |grep -B1 "inet addr" |awk '{ if ( $1 == "inet" ) { print $2 } else if ( $2 == "Link" ) { printf "%s:" ,$1 } }' |awk -F: '{ print $1 ": " $3 }'
}

bypasse_IP() {

 if [ -e /boot/openvpn/bypassed.txt ];then
	k=0
	echo "starting bypassing IP addresses ............. wait...."
	echo "starting bypassing IP addresses ............. wait"  >> /tmp/openvpn/openvpn.out
	for j in `cat /boot/openvpn/bypassed.txt`
	  do
		myip="`ping -c 1 $j | awk 'NR==1{gsub(/\(|\)/,"",$3);print $3}'`"
		mynewip="${myip%.*}.0/24"			
		echo $myip   "   >>>>>>>   "     $j >> /tmp/openvpn/openvpn.out
		echo $myip   "   >>>>>>>   "     $j 
		array=( "${array[@]}" "$mynewip" )
		echo ${array[k]}
		(( k++ ))
	  done

     localgateway="`ip route show default | grep default | awk {'print $3'}`"

     echo "Your local gateway = " $localgateway >> /tmp/openvpn/openvpn.out
     echo "Your local gateway = " $localgateway
  
 #echo "********* Bypass IP adresses from VPN tunnel********************"
	for ((l=0; l < k ; l++))
	  do
	   ip route add ${array[l]} via $localgateway dev eth0
	    echo ip route add ${array[l]} via $localgateway dev eth0  >> /tmp/openvpn/openvpn.out
	    echo ip route add ${array[l]} via $localgateway dev eth0 
	  done
   else
		echo "/boot/openvpn/bypassed.txt don't exist" >> /tmp/openvpn/openvpn.out
		echo "/boot/openvpn/bypassed.txt don't exist"
  fi	
}

extended_running() {

   if grep -q 'PLG_EXT="no"' /boot/config/plugins/openvpn/openvpn.cfg ; then
      ext_running="no"
      echo $ext_running
    else
       ext_running="yes"
       echo  $ext_running
   fi
}

openvpn_updateplg() {

 cd /boot/config/plugins
	[ -f openvpn_client_x64.plg.old ] && rm -f openvpn_client_x64.plg.old

	    openvpn_stop;
	    
	 if [ -f openvpn_client_x64.plg ]; then
			mv openvpn_client_x64.plg openvpn_client_x64.plg.old
			echo "Updating plugin"
			wget -q --no-check-certificate https://github.com/petersm1/openvpn_client_x64/raw/master/openvpn_client_x64.plg
			/usr/local/sbin/installplg /boot/config/plugins/openvpn_client_x64.plg
	  else
			echo "Updating plugin"
			wget -q --no-check-certificate https://github.com/petersm1/openvpn_client_x64/raw/master/openvpn_client_x64.plg
			/usr/local/sbin/installplg /boot/config/plugins/openvpn_client_x64.plg
			#openvpn_start;
	fi
}

openvpn_downgradeplg() {

	cd /boot/config/plugins
		if [ -f openvpn_client_x64.plg.old ]; then
			rm -f /openvpn_client_x64.plg
			mv openvpn_client_x64.plg.old openvpn_client_x64.plg
			echo "downgrading plugin"
			/usr/local/sbin/installplg /boot/config/plugins/openvpn_client_x64.plg
	fi
}

openvpn_getonlineversion() {

     OPEN_VPN_HOSTING_SERVER="http://openvpn.net/index.php/open-source/downloads.html"
     # Get latest version number from server
     OPEN_VPN_ONLINE_VER=$(wget ${OPEN_VPN_HOSTING_SERVER} -q --no-check-certificate -O - |grep "Change Log" | awk 'gsub(/.*OpenVPN | -- released on.*/,"")')
     echo "${OPEN_VPN_ONLINE_VER:0:6}"
}

openvpn_getlocalversion() {

     # Checking installed OpenVPN version
      OPEN_VPN_INSTALLED=$(openvpn --version | grep "OpenVPN " | awk 'gsub(/.*i4 | x.*/,"")')
     #echo $OPEN_VPN_INSTALLED
      echo "${OPEN_VPN_INSTALLED: -6}"
}

check_alive()
{
	
dev_tun=$(extended_device)
	
 if [ $(ifconfig | grep $dev_tun | grep -v grep | wc -l | tr -s "\n") -eq 0 ]; then
	 echo "no"
 else
	echo "yes"
 fi
	
}

test_ip_adress() {

	echo IPADRESS=$(curl -s -k curl -s https://www.privateinternetaccess.com/pages/how-it-works/  | grep "IP Address:")
	echo CITY=$(curl -s -k https://www.privateinternetaccess.com/pages/how-it-works/  | grep "City:")
	echo REGION=$(curl -s -k https://www.privateinternetaccess.com/pages/how-it-works/  | grep "Region:")
	echo COUNTRY=$(curl -s -k https://www.privateinternetaccess.com/pages/how-it-works/  | grep "Country:")
	echo POSTALCODE=$(curl -s -k https://www.privateinternetaccess.com/pages/how-it-works/  | grep "Postal Code:")
}

# read our configuration
source /boot/config/plugins/openvpn/openvpn.cfg

case "$1" in
'start')
  openvpn_start
  ;;
'stop')
  openvpn_stop
  ;;
  'restart')
  openvpn_restart
  ;;
'updatecfg')
  openvpn_updatecfg
  ;;
'status')
  openvpn_status
  ;;
'config')
  openvpn_write_startfile
  ;;
'extended_route')
  extended_route
  ;;
'extended_IP')
  extended_IP
  ;;
'extended_device')
  extended_device
  ;;
'extended_running')
  extended_running
  ;;
'updateplg')
  openvpn_updateplg
  ;;
'downgradeplg')
  openvpn_downgradeplg
  ;;
'getver')
  openvpn_getver $2 $3
  ;;
'getonlineversion')
  openvpn_getonlineversion $2
  ;;
'getlocalversion')
  openvpn_getlocalversion $2
  ;;
'writecfg')
  write_cfg
  ;; 
'get_all_IP')
  get_all_IP
  ;;
'check_alive')
  check_alive
  ;;
'tunnel_IP')
  tunnel_IP
  ;;
'test_ip_adress')
test_ip_adress
;;

  *)
  
  echo "usage $0 start|stop"
esac

]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpn/openvpn.page">
<INLINE>
Menu="NetworkServices"
Icon="Openvpn.png"
Version=&plgver;
Author="Peter_sm"
Type="php"
Title="OpenVPN Client"
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpn/Device_status.png">
<LOCAL>/boot/config/plugins/openvpn/Device_status.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpn/New_config.png">
<LOCAL>/boot/config/plugins/openvpn/New_config.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpn/Information.png">
<LOCAL>/boot/config/plugins/openvpn/Information.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpn/Openvpn.png">
<LOCAL>/boot/config/plugins/openvpn/Openvpn.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/openvpn/openvpn.php">
<INLINE>
<![CDATA[
<?PHP
$logstring="";
$statuslogstring="";
$ext_running="";
$openvpn_cfg = parse_ini_file("/boot/config/plugins/openvpn/openvpn.cfg");
$openvpn_running_1 = shell_exec("/etc/rc.d/rc.openvpn check_alive");
$openvpn_running = trim($openvpn_running_1);
$runningpid = shell_exec("/etc/rc.d/rc.openvpn status");
$extend_vpn_ip = shell_exec("/etc/rc.d/rc.openvpn extended_IP");
$dev_tun = shell_exec("/etc/rc.d/rc.openvpn extended_device");
$check_netstat = shell_exec("ip route show");
$openvpn_rollback = file_exists( "boot/config/plugins/openvpn_client_x64.plg.old" ) ? "yes" : "no";
$openvpn_localplg = shell_exec("/etc/rc.d/rc.openvpn getver local");
$openvpn_remoteplg = shell_exec("/etc/rc.d/rc.openvpn getver remote");
$updates_exist = "false";
$OPEN_VPN_ONLINE_VER = shell_exec("/etc/rc.d/rc.openvpn getonlineversion");
$OPEN_VPN_INSTALLED = shell_exec("/etc/rc.d/rc.openvpn getlocalversion");
$openvpn_myip = shell_exec("/etc/rc.d/rc.openvpn tunnel_IP");

if ($openvpn_cfg['PLG_EXT'] != "no") { $ext_running = "yes"; }

    if (file_exists('/tmp/openvpn/openvpn-status.log')) 
         {$statuslogstring = file_get_contents('/tmp/openvpn/openvpn-status.log');}

    if (file_exists('/tmp/openvpn/openvpn.out')) 
         {$logstring = file_get_contents('/tmp/openvpn/openvpn.out');}
            
    if (file_exists('/tmp/openvpn/openvpn.out.error'))
         {$logstring = file_get_contents('/tmp/openvpn/openvpn.out.error');}
?>

<HTML>
<HEAD></HEAD>
<BODY>

<div style="width: 45%; float:left">
 <div id="title">
    <span class="left">Status:&nbsp;<img src='/boot/config/plugins/openvpn/device_status.png'>
      <?if ($openvpn_running=="yes"):?>
        <span class="green"><b>OpenVPN Client is RUNNING</b></span>
      <?else:?>
        <span class="red"><b>OpenVPN Client is NOT RUNNING</b></span>
      <?endif;?>
    </span>
  </div>
 
<br></br>
  
  <div style="border: 0px solid black;">
   <table>      
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td style="text-align: left;">Plugin / Build</td>
        <td style="text-align: left;">Local Version</td>
        <td style="text-align: left;">Online Version</td>
      </tr>
     
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>OpenVPN Plugin Version</td>
        <td class="green-text" style="text-align: left;"><?=$openvpn_localplg?></td>
        <td class="green-text" style="text-align: left;"><?=$openvpn_remoteplg?></td>
      </tr>      
      
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td style="text-align: left;">OpenVPN Software Build</td>       
        <td class="green-text" style="text-align: left;"><?=$OPEN_VPN_INSTALLED?></td>
        <td class="green-text" style="text-align: left;"><?=$OPEN_VPN_ONLINE_VER?></td>
      </tr>            
    </table>
  </div>  
<br></br>


<div style="border: 0px solid black;">
<table>
      <tr style="font-weight:bold; font-size: 8pt; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td style="text-align: left;">CONFIG FILE</td>
        <td style="text-align: left;">Connected</td>
        <td style="text-align: left;">WAN IP</td>
        <td style="text-align: left;">Interface</td>
        <td style="text-align: left;">Extended Routing IP</td>
      </tr>

        <tr style="font-weight:bold; background:#FFFFFF;">
      	<td style="text-align: left;">
        <span class="blue-text font-size: 6pt"><?=$openvpn_cfg['OVPNCHOOSE'];?></span>
        </td>

        <td style="text-align: left;">
         <?if ($openvpn_running=="yes"):?>
     			 <a target="_blank"><span class="green font-size: 8pt"><b>Yes</b></a></span>
	     	  <?else:?>
   			   <a target="_blank"><span class="red font-size: 8pt"><b>No</b></a></b></span>
		     <?endif;?>	
        </td>

        <td style="text-align: left;">
        	<?if ($openvpn_running=="yes"):?>
           	<span class="green-text font-size: 8pt"><?=$openvpn_myip?></span>
          <?else:?>
            <span class="red-text font-size: 8pt"><?=$openvpn_myip?></span>
         	<?endif;?>
        </td>
       
        <td style="text-align: left;">
        	<?if ($openvpn_running=="yes"):?>
            <span class="green-text font-size: 8pt"><?=$dev_tun?></span>
         <?else:?>
            <span class="red-text"></span>
        <?endif;?>
        </td>       

        <td style="text-align: left;">
       		<?if ($openvpn_running=="yes"):?>
        	   <?if ($ext_running=="yes"):?>
      	       <span class="green-text font-size: 8pt"><?=$extend_vpn_ip?></span>
             <?else:?>   
                <span class="red-text font-size: 8pt">None</span>
             <?endif;?>
        	 <?else:?>  
               <span class="red-text"> </span>
        	<?endif;?>
        </td>
      </tr>
    </table>
           
</div> 

         
<br></br>

<div>
<table>    
     <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
     <td colspan="2" style="text-align: center;">Control Actions</td>
     </tr>   
          
     <?if ($openvpn_running=="yes"):?>
        <tr>
        <td width="30%">
        <form name="stop_openvpn" method="POST" action="/update.htm" target="progressFrame">
        <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpn stop">
        <input type="submit" name="runCmd" value="Stop">
        </form>
        </td>
        <td> <span class="green-text">Stop OpenVPN Client</span></td>
        </tr>
   
     <?else:?>
          </tr>
          <tr>
          <td width="30%">
          <form name="start_openvpn1" method="POST" action="/update.htm" target="progressFrame">
          <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpn start">
          <input type="submit" name="runCmd" value="start">
          </form>
          </td>
          <td> <span class="red-text">Start OpenVPN Client</span></td>
          </tr>
          
         
     <?endif;?>
    
    </table>
  </div>

<tr>
	<td><textarea class="tooltip" title="Information about the OpenVPN log is displayed in this area" wrap="hard" readonly="yes" style="width: 600px; height: 250px;color: blue;font-size: 8pt"><?php echo $logstring; ?></textarea></td>
        </tr>
	<br></br>



</div>

<div style="width: 49%; float:right; border: 0px solid black;">

  <div id="title">
    <span class="left">OpenVPN Client Configuration:&nbsp;<img src='/boot/config/plugins/openvpn/New_config.png'>
  </div>

<br></br>

  <div style="border: 0px solid black;">
    <table>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Updates</td>
        </tr>
      
     <?if (($openvpn_remoteplg != $openvpn_localplg) && ($openvpn_localplg != "Unknown") && ($openvpn_remoteplg != "Unknown")): ?>
        <tr>
        <td width="20%">
        <form name="openvpn_update" method="POST" action="/update.htm" target="progressFrame">
				<input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpn updateplg">			
				<input type="submit" name="runCmd" value="Update Plugin">
				</form>
        
        </td>
        <td><span class="red-text">An update is available</span></td>        
        </tr>
        
        <?$updates_exist="true"?>
     <?endif;?>

      <?if ($updates_exist=="false"):?>
        <tr>
        <td>No updates available...</td>
        </tr>
      <?endif;?>
      
       <? if (($openvpn_rollback=="yes") && ($updates_exist=="false")) : ?>
        <table>
	       <form name="openvpn_downgrade" method="POST" action="/update.htm" target="progressFrame">
	       <input type="hidden" name="cmd" value="/etc/rc.d/rc.openvpn downgradeplg">
    	   <input type="submit" name="runCmd" value="Downgrade PLG">
	       </form>
	  </div>
   </table>
 <?endif;?>
</table>
</div>

  <br></br>

  <?if ($openvpn_running == "yes"):?>
    <div><center><b>To change configuration - Press Stop in "Control Action"</b></center></div>
  <?endif;?>

<br></br>

<div>
 <form name="openvpn_settings" method="POST" action="/plugins/openvpn/openvpn_submit.php" target="progressFrame" onsubmit="validateForm();">
 <table>
    <tr>
    <td colspan="2" align="left">
  	  <?if ($openvpn_running != "yes"):?>
        <input type="submit" value="Save Below Configuration">
      <?endif;?>
    </td>
    </tr>
        
<?if ($openvpn_running=="no"):?>
    <tr>
    <td>Use password to login ?</td>
	  <td>
	  <select name="PLG_PASSWORD" id="PLG_PASSWORD" class="tooltip" title="Enter No if the server you are connecting to does not require a username and password, if this is set to Yes, your OVPN file will be updated with your login credentials." size="1"> 
	  <?=mk_option($openvpn_cfg['PLG_PASSWORD']  , "no", "No");?>
		<?=mk_option($openvpn_cfg['PLG_PASSWORD']  , "yes", "Yes");?>
		</select>				
		</td>
		</tr>	  

		<tr>
  	<td>Client configuration file</td>
		<td>
		<select name="OVPNCHOOSE" id="OVPNCHOOSE" ">
			<?php
	 		?><option><?=$openvpn_cfg['OVPNCHOOSE'];?></option><?
	  	$dirName = "/boot/openvpn/";      
	  	$dirs=array($dirName);
	   		while($dir=array_pop($dirs)){
	    		$handle=opendir($dir);
	      		while($file=readdir($handle)){
	       			if($file!='.' && $file!='..'){
	         			$pathfilename=$dir.'/'.$file;
	           			if(is_file($pathfilename)){
		     						$checkextension = pathinfo($file, PATHINFO_EXTENSION);	
			  						if($checkextension === "ovpn"){
											$pathfilename = str_replace('//', '/', $pathfilename);
				?><option><? echo "$pathfilename\n "; ?></option><?
	       		   			}
	           			}
	       			else{
	        			$dirs[]=$pathfilename;
	       			}
	      		}
	    		}
	   		}
		?>
		</select>
		</td>
		</tr>	

		<tr>
		<td>Username for OpenVPN Client:</td>
		<td><input type="text" style="width:30%" class="tooltip" title="Add your username for your VPN account here" name="USER" id="USER" value="<?=$openvpn_cfg['USER'];?>"></td>
		</tr>		 
		
		<tr>
		<td>Password for OpenVPN Client:</td>
		<td><input type="password" style="width:30%" class="tooltip" title="Add your password for your VPN account here" name="PASS" id="PASS" value="<?=$openvpn_cfg['PASS'];?>"></td>	 
	 	</tr>
	        
	 	<tr>
		<td>Start OpenVPN during array mounting:</td>
		<td>
		<select name="START_ON_MOUNT" id="START_ON_MOUNT" size="1">
		<?=mk_option($openvpn_cfg['START_ON_MOUNT'], "no", "No");?>
		<?=mk_option($openvpn_cfg['START_ON_MOUNT'], "yes", "Yes");?>
		</select>
		</td>         
		<tr>
		                
		<tr>
		<td>Extended Routing:</td>
		<td>
		<select style="width:50%" name="PLG_EXT" id="PLG_EXT" size="1">
		<?=mk_option($openvpn_cfg['PLG_EXT'], "no", "None");?>
		<?=mk_option($openvpn_cfg['PLG_EXT'], "Bypass", "Bypass IP addresses from tunnel");?>
		<?=mk_option($openvpn_cfg['PLG_EXT'], "Specific", "Route only specific IP addresses");?>
		</select>
		</td>
		</tr>
  <?endif;?>
 </table>
</div>


<div>
 	
<br></br>
    <div>   
     <tr>	   	
     <td><textarea class="tooltip" title="Information from 'ip route show'  is displayed here.." wrap="hard" readonly="yes" style="width: 570px; height: 130px;color: blue;font-size: 8pt"><?php echo $check_netstat; ?></textarea></td>
     </tr>
       	<td><textarea class="tooltip" title="Information about the OpenVPN status is displayed in this area" wrap="hard" readonly="yes" style="width: 570px; height: 130px;color: blue;font-size: 8pt"><?php echo $statuslogstring; ?></textarea></td>
     <br></br>
    </div>     
<br></br>
 	
 	
 	
 	
 	
 	
 	
</body>
</form>
</div>

<script type="text/javascript">
function validateForm() {
  document.getElementById('USER').disabled = false;
  document.getElementById('PASS').disabled = false;
  document.getElementById('START_ON_MOUNT').disabled = false;
  document.getElementById('PLG_EXT=').disabled = false;
  document.getElementById('PLG_PASSWORD').disabled = false;
  document.getElementById('OVPNCHOOSE').disabled = false;
}

function checkRUNNING(form) {
  if ("<?=$openvpn_running?>" == "yes") {
  
    form.USER.disabled = true;
    form.PASS.disabled = true;
    form.START_ON_MOUNT.disabled = true;
    form.PLG_EXT.disabled = true; 
    form.PLG_PASSWORD.disabled = true;
    form.OVPNCHOOSE.disabled = true;
  }
}
checkRUNNING(document.openvpn_settings);
</script>
</BODY>
</HTML>

]]>
</INLINE>
</FILE>


<FILE Name="/usr/local/emhttp/plugins/openvpn/openvpn-ctl.php" Mode="0770">
<INLINE>
<![CDATA[
<?PHP
 
 shell_exec("/etc/rc.d/rc.openvpn start");

?>

checkRUNNING(document.openvpn_settings);

<HTML>
<HEAD><SCRIPT>var goback=parent.location;</SCRIPT></HEAD>
<BODY onLoad="parent.location=goback;"</BODY>
</HTML>
]]>
</INLINE>
</FILE>






<!-- event handler -->

<FILE Name="/usr/local/emhttp/plugins/openvpn/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
source /boot/config/plugins/openvpn/openvpn.cfg

if [[ $START_ON_MOUNT == "yes" ]]; then
        /etc/rc.d/rc.openvpn start
fi

]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/openvpn/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.openvpn stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/openvpn-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/openvpn/openvpn.cfg

# create openvpn-writable directory for pid file
if [ ! -e /var/run/openvpn ]; then
  mkdir /var/run/openvpn
  chown nobody:users /var/run/openvpn
  chmod 0777 /var/run/openvpn
fi

rm -f /tmp/openvpn-install
]]>
</INLINE>
</FILE>


<FILE Name="/var/log/plugins/openvpn">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>


############################################
# WEBUI Submit page
############################################
<FILE Name="/usr/local/emhttp/plugins/openvpn/openvpn_submit.php">
<INLINE>
<![CDATA[

<?PHP
parse_str($argv[1], $_GET);
 
$USER = $_GET['USER'];
$PASS = $_GET['PASS'];
$START_ON_MOUNT = $_GET['START_ON_MOUNT'];
$PLG_EXT = $_GET['PLG_EXT'];
$PLG_PASSWORD = $_GET['PLG_PASSWORD'];
$OVPNCHOOSE = $_GET['OVPNCHOOSE'];

$arguments = "";
$arguments .= "USER_NEW=\"$USER\"\n";
$arguments .= "PASS_NEW=\"$PASS\"\n";
$arguments .= "START_ON_MOUNT_NEW=\"$START_ON_MOUNT\"\n";
$arguments .= "PLG_EXT_NEW=\"$PLG_EXT\"\n";
$arguments .= "PLG_PASSWORD_NEW=\"$PLG_PASSWORD\"\n";
$arguments .= "OVPNCHOOSE_NEW=\"$OVPNCHOOSE\"\n";

echo "Please wait while updating configuration...";

$file = "/usr/local/emhttp/plugins/openvpn/openvpn.args";
file_put_contents($file, $arguments);
shell_exec("/etc/rc.d/rc.openvpn updatecfg");
?>

<HTML>
<HEAD><SCRIPT>var goback=parent.location;</SCRIPT></HEAD>
<BODY onLoad="parent.location=goback;"</BODY>
</HTML>

]]>
</INLINE>
</FILE>
</PLUGIN>